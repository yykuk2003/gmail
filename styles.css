@import url('https://fonts.googleapis.com/css?family=Poppins:wght@300;400;700&display=sawp');

/* custom properties 
재사용할 임의의 값
*/
:root{
    --light-clr:#fff;
    --dark-clr:#504f4f;
    --accent-clr:#00cc90;

    --font-size-xsm: 1.2em;
    --font-size-sm: 1.6em;
    --font-size-md: 2.4em;
    --font-size-lg: 3.6em;

    --font-family: 'Poppins', sans-serif;

    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-bold: 700;

    --margin-sm: 1rem;
    --margin-md: 2rem;
    --margin-lg: 3rem;

    --section-spacing: 8rem;

    --gap-sm: 1.5rem;
    --gap-md: 2rem;
    --gap-lg: 4rem;
}

/* Base Styles 
before some content or after some content
*/
*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box; 
}

html {
    /* 10px */
    font-size: 62.5%;

}

/*
overflow(visible, hidden, scroll, auto)
overflow: 
visible: if some contents goes over the box, it shows as it is
hidden: doesn't show left to right scroll bar, but it show top to bottom scroll bar
scroll: always show the scroll bar
auto: when contexts goes over the axix shows the scroll bar
overflow-x = create scroll bar when right side context is longer than left
overflow-y = same but top to bottom
*/
body {
    font-family: var(--font-family);
    font-size: var(--font-size-sm);
    color: var(--dark clr);
    overflow-x: hidden;

}

a {
    color: var(--dark-clr);
    text-decoration: none;
}

ul {
    list-style: none;
}

img {
    max-width: 100%;
    display: block;
}

i {
    font-size:var(--margin-md);
}

.container {
    max-width: 116rem;
    margin: 0 auto;
    padding: 0 1.5rem;
}

.place-items-center {
    display: flex;
    align-items: center;
    justify-content: center;
}

.sm-screen-hidden {
    display: none !important;
}

.d-grid {
    display: grid;
}

.section {
    padding-block: var(--section-spacing);
}

/* header */
.header {
    background-color: var(--light-clr);
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 999;
}

/* 
justify-content: arrnange contents
*/
.nav {
    height: 8rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    background-color: inherit;
}

.logo {
    font-size: var(--margin-md);
    font-weight: var(--font-weight-bold);
    color: var(--accent-clr);
}

.menu-toggle-icon {
    width: 3.5rem;
    height: 3.5rem;
    background-color: var(--accent-clr);
    color: var(--light-clr);
    cursor: pointer;
    transition: color .25s;
}

.menu-close-icon {
    display: none;
}

.list {
    display: flex;
    flex-direction: column;
    gap: var(--gap-sm);
}

.list-link {
    position: relative;

}


/* 


*/
.list-link::after,
.list-link.current::after {
    content: '';
    position: absolute;
    top: 50%;
    right: -1rem;
    transform: translateY(-50%);
    width: .5rem;
    height: .5rem;
    background-color: var(--accent-clr);
    border-radius: 50%;
    opacity: 0;
    transition: opacity .25s;
}


.list-link.current::after {
    opacity: 1 !important;
}

.list-link:hover::after {
    opacity: 1;
}


/* 
z-index: 
far from user
-3
-2
-1
0
1
2
3
close from user
*/
.nav-mobile {
    background-color: #f8f8f8;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    padding: 1.5rem;
    transform: translateY(-100%);
    z-index: -1;
    transition: tranform .25s;
}

/*if nav has class of active*/
.nav.active .nav-mobile {
    transform: translateY(8rem);
}

.nav.active .menu-open-icon {
    display: none;
}

.nav.active .menu-close-icon {
    display: block;
}


/* 
height: 100vh => viewport height 100%
            => it doens't related to parent value so we can use everywhere
height: 100% => parent element height 100%
            => we have to set height to parent value
*/
.header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background-color: rgba(0,0,0,.8);
    z-index: -1;
    opacity: 0;
    transform: scale(0);
    transition: opacity .5s;
}

/* 
transform: rotate, fix size, move around
*/
.header.active::before {
    opacity: 1;
    transform: scale(1);
}

.header.active-scroll {
    border-bottom: 1px solid rgba(0, 0, 0, .1);
}


/* 
 */
.showcase {
    margin-top: 8rem;
}

.showcase-container {
    gap: var(--gap-lg);
}

.image-group {
    grid-template-columns: 2rem repeat(2, 1fr) 2rem repeat(2, 1fr) 2rem;
}

.image-box {
    min-height: 25rem;
    box-shadow: 2px 2px 1rem rgba(0, 0, 0, .1);
    /* overflow: hidden; */
}

.showcase .image-box {
    min-height: 25rem;
}

.image-box img {
    height:100%;
    object-fit: cover;
    transition: transform .5s;
}

.image-box:hover img {
    transform: scale(1.1);
}


/* 
set up the position of the images
*/
.image-left {
    grid-column: 1/4;
    grid-row: 1/span 10;
    z-index: 5;
}

.image-center {
    grid-column: 3/6;
    grid-row: 7/span 10;
}

.image-right {
    grid-column: 5/-1;
    grid-row: 3/span 10;
    z-index: 5;
}

.tagline {
    display: inline-block;
    font-size: var(--font-size-xsm);
    font-weight: var(--font-weight-bold);
    text-transform: uppercase;
    color: var(--accent-clr);
    margin-bottom:var(--margin-sm);
}

.title {
    font-size: var(--font-size-md);
    margin-bottom: var(--margin-md);
}

.main-title {
    font-size: var(--font-size-lg);
}

.accent-text {
    color: var(--accent-clr);
}

.description {
    margin-bottom: var(--margin-lg);
}

.btn {
    display: inline-block;
    background-color: var(--accent-clr);
    color: var(--light-clr);
    padding: 1rem 2.5rem;
    transition: background-color .25s;
}

.btn:hover {
    background-color: #00be85;
}

.secondary-grid {
    gap: var(--gap-lg);
}

.beach-data-wrapper {
    position: relative;
}

.beach-data-wrapper.image-box img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
}
